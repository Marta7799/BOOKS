{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,E,S,E,S,E,S,E,S,E,SEAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAmIyB,E,E,Q,oE","sources":["<anon>","src/shopping-list.js","src/js/shopping-list.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nparcelRequire(\"kM5jX\");\nparcelRequire(\"haS5e\");\nparcelRequire(\"fQwj1\");\nparcelRequire(\"a7nVE\");\nparcelRequire(\"1fSMk\");\n/*'use strict';\nimport { fetchBookById } from './api';\n\nlet currentBookData = null;\n\nconst bookCover = document.querySelector('.shop__img');\nconst bookAmazon = document.querySelector('.shop__amazon');\nconst bookDescription = document.querySelector('.shop__description-details');\nconst btnCloseShop = document.querySelector('.shop__btn-trash');\nconst backdropShop = document.querySelector('.backdrop-shop');\nconst shop = document.querySelector('.shop');\nconst comment = document.querySelector('.shop__comment');\nconst shopsList = document.querySelector('.shop__shops-list');\n\nconst listBooks = document.querySelector('.category__list');\nconst listBooksInCategories = document.querySelector('.books-gallery__section');\n\nlet isBookAlreadyInShoppingList = false;\n\nconst toggleButtonsVisibility = () => {\n  if (isBookAlreadyInShoppingList) {\n    document.querySelector('.shop__btn-add').classList.add('shop__btn-text-hidden');\n    document.querySelector('.shop__btn-remove').classList.remove('shop__btn-text-hidden');\n    comment.classList.remove('shop__btn-text-hidden');\n  } else {\n    document.querySelector('.shop__btn-add').classList.remove('shop__btn-text-hidden');\n    document.querySelector('.shop__btn-remove').classList.add('shop__btn-text-hidden');\n    comment.classList.add('shop__btn-text-hidden');\n  }\n};\n\nconst addToLocalStorage = () => {\n  if (!currentBookData) return;\n\n  const storedBooks = JSON.parse(localStorage.getItem('books')) || [];\n  const bookExists = storedBooks.some(book => book._id === currentBookData._id);\n\n  if (!bookExists) {\n    storedBooks.push(currentBookData);\n    localStorage.setItem('books', JSON.stringify(storedBooks));\n  }\n\n  isBookAlreadyInShoppingList = true;\n  toggleButtonsVisibility();\n};\n\nconst removeFromLocalStorage = () => {\n  if (!currentBookData) return;\n\n  const storedBooks = JSON.parse(localStorage.getItem('books')) || [];\n  const updatedBooks = storedBooks.filter(book => book._id !== currentBookData._id);\n\n  localStorage.setItem('books', JSON.stringify(updatedBooks));\n\n  isBookAlreadyInShoppingList = false;\n  toggleButtonsVisibility();\n};\n\nconst createShop = async bookId => {\n  const bookData = await fetchBookById(bookId);\n  currentBookData = bookData;\n\n  const storedBooks = JSON.parse(localStorage.getItem('books')) || [];\n  isBookAlreadyInShoppingList = storedBooks.some(book => book._id === bookData._id);\n  toggleButtonsVisibility();\n\n  bookCover.src = bookData.book_image;\n  bookAmazon.href = bookData.amazon_product_url;\n  const markup = `<h2 class='shop__title'>${bookData.title}</h2>\n                <p class='shop__author'>${bookData.author}</p>\n                <p class='shop__text'>${bookData.description}</p>`;\n  bookDescription.innerHTML = markup;\n\n  const shopsBooks = bookData.buy_links\n    .slice(1)\n    .map(\n      link =>\n        `<li class='shop__shops-item'><a class='shop__shops-link' href='${link.url}' target='_blank'>${link.name}</a></li>`,\n    )\n    .join('');\n  shopsList.innerHTML = shopsBooks;\n};\n\nconst closeShop = () => {\n  backdropShop.classList.add('shop-is-hidden');\n\n  btnCloseShop.removeEventListener('click', closeShop);\n  backdropShop.removeEventListener('click', backdropClickHandler);\n};\n\nconst backdropClickHandler = event => {\n  if (event.target === backdropShop) {\n    closeShop();\n  }\n};\nshop.addEventListener('click', event => {\n  event.stopPropagation();\n});\n\nconst openShop = e => {\n  if (e.target.closest('.shop__btn-add')) {\n    const bookId = e.target.closest('li').dataset.id;\n    createShop(bookId);\n\n    btnCloseShop.addEventListener('click', closeShop);\n    backdropShop.addEventListener('click', backdropClickHandler);\n  }\n};\n\nlistBooks.addEventListener('click', openShop);\nlistBooksInCategories.addEventListener('click', openShop);\n\n// Obsługa pustej listy zakupów\nconst emptyListContainer = document.querySelector('.centering');\nconst supportShopping = document.querySelector('.support-shopping');\nconst shoppingList = document.querySelector('.shopping');\n\nconst checkEmptyShoppingList = () => {\n  const storedBooks = JSON.parse(localStorage.getItem('books')) || [];\n  if (storedBooks.length === 0) {\n    emptyListContainer.classList.remove('centering-is-hidden');\n    supportShopping.classList.remove('support-shopping-is-hidden');\n    shoppingList.classList.add('shopping-is-hidden');\n  } else {\n    emptyListContainer.classList.add('centering-is-hidden');\n    supportShopping.classList.add('support-shopping-is-hidden');\n    shoppingList.classList.remove('shopping-is-hidden');\n  }\n};\n\n// Wywołaj funkcję, aby sprawdzić, czy lista zakupów jest pusta\ncheckEmptyShoppingList();*/ \n\nparcelRequire(\"2DTLi\");\n\n\n//# sourceMappingURL=shopping-list.e79ed723.js.map\n","import './sass/main.scss';\nimport './js/mobile-menu';\nimport './js/theme-changer';\nimport './js/navigation-highlight';\nimport './js/support.js';\nimport './js/modal-registration';\nimport './js/shopping-list';\nimport './js/firebase';\n","/*'use strict';\nimport { fetchBookById } from './api';\n\nlet currentBookData = null;\n\nconst bookCover = document.querySelector('.shop__img');\nconst bookAmazon = document.querySelector('.shop__amazon');\nconst bookDescription = document.querySelector('.shop__description-details');\nconst btnCloseShop = document.querySelector('.shop__btn-trash');\nconst backdropShop = document.querySelector('.backdrop-shop');\nconst shop = document.querySelector('.shop');\nconst comment = document.querySelector('.shop__comment');\nconst shopsList = document.querySelector('.shop__shops-list');\n\nconst listBooks = document.querySelector('.category__list');\nconst listBooksInCategories = document.querySelector('.books-gallery__section');\n\nlet isBookAlreadyInShoppingList = false;\n\nconst toggleButtonsVisibility = () => {\n  if (isBookAlreadyInShoppingList) {\n    document.querySelector('.shop__btn-add').classList.add('shop__btn-text-hidden');\n    document.querySelector('.shop__btn-remove').classList.remove('shop__btn-text-hidden');\n    comment.classList.remove('shop__btn-text-hidden');\n  } else {\n    document.querySelector('.shop__btn-add').classList.remove('shop__btn-text-hidden');\n    document.querySelector('.shop__btn-remove').classList.add('shop__btn-text-hidden');\n    comment.classList.add('shop__btn-text-hidden');\n  }\n};\n\nconst addToLocalStorage = () => {\n  if (!currentBookData) return;\n\n  const storedBooks = JSON.parse(localStorage.getItem('books')) || [];\n  const bookExists = storedBooks.some(book => book._id === currentBookData._id);\n\n  if (!bookExists) {\n    storedBooks.push(currentBookData);\n    localStorage.setItem('books', JSON.stringify(storedBooks));\n  }\n\n  isBookAlreadyInShoppingList = true;\n  toggleButtonsVisibility();\n};\n\nconst removeFromLocalStorage = () => {\n  if (!currentBookData) return;\n\n  const storedBooks = JSON.parse(localStorage.getItem('books')) || [];\n  const updatedBooks = storedBooks.filter(book => book._id !== currentBookData._id);\n\n  localStorage.setItem('books', JSON.stringify(updatedBooks));\n\n  isBookAlreadyInShoppingList = false;\n  toggleButtonsVisibility();\n};\n\nconst createShop = async bookId => {\n  const bookData = await fetchBookById(bookId);\n  currentBookData = bookData;\n\n  const storedBooks = JSON.parse(localStorage.getItem('books')) || [];\n  isBookAlreadyInShoppingList = storedBooks.some(book => book._id === bookData._id);\n  toggleButtonsVisibility();\n\n  bookCover.src = bookData.book_image;\n  bookAmazon.href = bookData.amazon_product_url;\n  const markup = `<h2 class='shop__title'>${bookData.title}</h2>\n                <p class='shop__author'>${bookData.author}</p>\n                <p class='shop__text'>${bookData.description}</p>`;\n  bookDescription.innerHTML = markup;\n\n  const shopsBooks = bookData.buy_links\n    .slice(1)\n    .map(\n      link =>\n        `<li class='shop__shops-item'><a class='shop__shops-link' href='${link.url}' target='_blank'>${link.name}</a></li>`,\n    )\n    .join('');\n  shopsList.innerHTML = shopsBooks;\n};\n\nconst closeShop = () => {\n  backdropShop.classList.add('shop-is-hidden');\n\n  btnCloseShop.removeEventListener('click', closeShop);\n  backdropShop.removeEventListener('click', backdropClickHandler);\n};\n\nconst backdropClickHandler = event => {\n  if (event.target === backdropShop) {\n    closeShop();\n  }\n};\nshop.addEventListener('click', event => {\n  event.stopPropagation();\n});\n\nconst openShop = e => {\n  if (e.target.closest('.shop__btn-add')) {\n    const bookId = e.target.closest('li').dataset.id;\n    createShop(bookId);\n\n    btnCloseShop.addEventListener('click', closeShop);\n    backdropShop.addEventListener('click', backdropClickHandler);\n  }\n};\n\nlistBooks.addEventListener('click', openShop);\nlistBooksInCategories.addEventListener('click', openShop);\n\n// Obsługa pustej listy zakupów\nconst emptyListContainer = document.querySelector('.centering');\nconst supportShopping = document.querySelector('.support-shopping');\nconst shoppingList = document.querySelector('.shopping');\n\nconst checkEmptyShoppingList = () => {\n  const storedBooks = JSON.parse(localStorage.getItem('books')) || [];\n  if (storedBooks.length === 0) {\n    emptyListContainer.classList.remove('centering-is-hidden');\n    supportShopping.classList.remove('support-shopping-is-hidden');\n    shoppingList.classList.add('shopping-is-hidden');\n  } else {\n    emptyListContainer.classList.add('centering-is-hidden');\n    supportShopping.classList.add('support-shopping-is-hidden');\n    shoppingList.classList.remove('shopping-is-hidden');\n  }\n};\n\n// Wywołaj funkcję, aby sprawdzić, czy lista zakupów jest pusta\ncheckEmptyShoppingList();*/\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register"],"version":3,"file":"shopping-list.e79ed723.js.map"}