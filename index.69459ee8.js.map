{"mappings":"A,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCGA,QAAQ,GAAG,CAAC,AAAA,CAAA,EAAA,EAAA,oBAAmB,AAAnB,EAAqB,yBAEjC,MAAM,EAAsB,SAAS,aAAa,CAAC,2BAE7C,EAA4B,MAAM,IACtC,IAAM,EAAQ,MAAM,AAAA,CAAA,EAAA,EAAA,oBAAmB,AAAnB,EAAqB,GACnC,EAAO,EACV,GAAG,CACF,AAAA,GAAQ,CAAC,aAAa,EAAE,EAAK,GAAG,CAAC;YAC3B,EAAE,EAAK,KAAK,CAAC;WACd,EAAE,EAAK,MAAM,CAAC;SAChB,CAAC,EAEL,IAAI,CAAC,IACR,EAAoB,kBAAkB,CAAC,aAAc,EACvD,EACA,EAA0B,uB,4D","sources":["<anon>","src/js/helper.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired7c6\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired7c6\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $lXnOV = parcelRequire(\"lXnOV\");\n\"use strict\";\nconsole.log((0, $lXnOV.fetchBooksByCategory)(\"Hardcover Nonfiction\"));\nconst $19e8364c805227ee$var$listBooksByCategory = document.querySelector(\".list-books-by-category\");\nconst $19e8364c805227ee$var$createListBooksByCategory = async (selectedCategory)=>{\n    const books = await (0, $lXnOV.fetchBooksByCategory)(selectedCategory);\n    const list = books.map((book)=>`<li data-id=\"${book._id}\">\n        <h4>${book.title}</h4>\n        <p>${book.author}</p>\n    </li>`).join(\"\");\n    $19e8364c805227ee$var$listBooksByCategory.insertAdjacentHTML(\"afterbegin\", list);\n};\n$19e8364c805227ee$var$createListBooksByCategory(\"Hardcover Nonfiction\");\n\n\n//# sourceMappingURL=index.69459ee8.js.map\n","'use strict';\nimport { fetchBooksByCategory } from './api';\n\nconsole.log(fetchBooksByCategory('Hardcover Nonfiction'));\n\nconst listBooksByCategory = document.querySelector('.list-books-by-category');\n\nconst createListBooksByCategory = async selectedCategory => {\n  const books = await fetchBooksByCategory(selectedCategory);\n  const list = books\n    .map(\n      book => `<li data-id=\"${book._id}\">\n        <h4>${book.title}</h4>\n        <p>${book.author}</p>\n    </li>`,\n    )\n    .join('');\n  listBooksByCategory.insertAdjacentHTML('afterbegin', list);\n};\ncreateListBooksByCategory('Hardcover Nonfiction');\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$lXnOV","console","log","fetchBooksByCategory","$19e8364c805227ee$var$listBooksByCategory","document","querySelector","$19e8364c805227ee$var$createListBooksByCategory","selectedCategory","books","list","map","book","_id","title","author","join","insertAdjacentHTML"],"version":3,"file":"index.69459ee8.js.map"}